#!/bin/bash

if ! options=$(getopt -l name:,delay:,jitter:,delete -o "n:d" -- "$@"); then
    exit 1
fi

set -- $options

name=".*"
delay="100ms"
jitter="10ms"
interval="30"

unquote () {
    printf "$1" | tr -d "'"
}

while [ $# -gt 0 ]; do
    case $1 in
    -n)
        interval="$(unquote "$2")"
        shift
        ;;
    --interval|--name|--delay|--jitter)
        declare "${1#--}"="$(unquote "$2")"
        shift
        ;;
    -d|--delete)
        declare delete=1
        ;;
    --)
        shift
        break
        ;;
    -*)
        echo "$0: error - unrecognized option $1" >&2
        exit 1
        ;;
    *) break ;;
    esac
    shift
done

get_netnses() {
    bash /usr/bin/dockerveth.sh |
        mlr --tsv --headerless-csv-output \
            filter "\$VETH != \"not_found\"" then \
            filter "\$NAMES =~ \"${name}\"" then \
            cut -f NETNS
}

# Add netem config inside netns
netem_add () {
    echo ip netns exec $1 tc qdisc add dev $2 root netem delay "${delay}" "${jitter}"
    ip netns exec $1 tc qdisc add dev $2 root netem delay "${delay}" "${jitter}"
}

# Delete netem config inside netns
netem_del () {
    echo ip netns exec $1 tc qdisc del dev $2 root
    ip netns exec $1 tc qdisc del dev $2 root 2>/dev/null
}


get_ifaces () {
    echo ip netns exec $1 ip link show type veth >&2
    ifaces=$(ip netns exec $1 ip link show type veth | sed -En 's/^.+: (.+)@if.*$/\1/p')
    for iface in $ifaces; do
        if [ "$iface" != "lo" ]; then
            echo "$iface"
        fi
    done
}

update_netem () {
    for netns in $(get_netnses); do
        echo "Applying delay $delay, jitter $jitter on $netns"
        for iface in $(get_ifaces "$netns"); do
            netem_del "$netns" "$iface"
            netem_add "$netns" "$iface"
        done
    done
}

prune_netem() {
    for netns in $(get_netnses); do
        echo "Pruning netem config from $netns"
        for iface in $(get_ifaces "$netns"); do
            netem_del "$netns" "$iface"
        done
    done
}

if [[ ! -z $delete ]]; then
    echo "Deleting all netem configs and exiting"
    prune_netem
    exit 0
fi

while true; do
    update_netem
    sleep "${interval}"
done
